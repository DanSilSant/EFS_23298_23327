@model IEnumerable<EFS_23298_23327.Models.Temas>
@using EFS_23298_23327.Data
@using EFS_23298_23327.Data.Enum
@{
    ViewData["Title"] = "Index";
}


<script>
    function teste(id, nome) {
        $('#nomeTema').text(nome);
        $('#apagarTema').attr('action', 'Gerir/Temas/Delete/' + id);
    }


</script>
<style>
    
</style>
<div class="modal fade" id="modalApagar" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered ">
        <div class="modal-content">
            <div class="modal-header modal-header-danger">
                <h5 class="modal-title" id="exampleModalLabel"><i class="bi bi-exclamation-circle-fill display-6 me-5 "></i> Deseja apagar tema '<span id="nomeTema">a</span>' ?</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-footer ">

                <button type="button" class="btn btn-secondary mr-auto" data-bs-dismiss="modal">Fechar</button>
                <form id="apagarTema" method="post">
                    <button type="submit" class="btn btn-danger">Apagar</button>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="container">
<h1>Temas</h1>
@if (TempData["MensagemErro"] != null) {
    <div class="alert alert-warning text-center alert-dismissible fade show" role="alert">
        @Html.Raw(TempData["MensagemErro"])
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>

}
@if (TempData["TemaApagado"] != null) {
    <div class="alert alert-success alert-dismissible text-center fade show" role="alert">
        Tema <strong>@TempData["TemaApagado"]</strong> apagado com sucesso!
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (@TempData["NomeTemaCriado"] != null) {
    <div class="alert alert-success alert-dismissible text-center fade show" role="alert">
        Tema <strong>@TempData["NomeTemaCriado"]</strong> criado com sucesso!
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<p>
    <a asp-action="Create">
        <button class="btn btn-info"> <i class="fa fa-add me-2"></i>Criar tema</button>
    </a>

</p>

<div id="tabela">
<span class="text-center text-white mb-2">@AppUtils.GetHumanReadableCount("resultado", Model.Count())</span>

    <table id="temas" class="table table-bordered table-sm table-hover table-striped " style="border-collapse: collapse;">
    <thead class="text-center  table-info" style="font-size:13px;">
        <tr>
               
                <th class="w-100 text-nowrap">
                    @Html.DisplayNameFor(model => model.Nome)<br />
                <input class="w-100 filter" id="Nome" onkeyup="filter(this)"></input>

            </th>
                <th class="w-100 text-nowrap">
                    @Html.DisplayNameFor(model => model.Descricao)<br />
                <input class="w-100 filter" id="Descricao" onkeyup="filter(this)"></input>

            </th>
                <th class="w-100 text-nowrap">
                    @Html.DisplayNameFor(model => model.TempoEstimado)<br />
                <input class="w-100 filter" id="TempoEstimado" onkeyup="filter(this)"></input>


            </th>
            <th class="w-100 text-nowrap">
                @Html.DisplayNameFor(model => model.MinPessoas)<br />
                <input class="w-100 filter" id="MinPessoas" onkeyup="filter(this)"></input>


            </th>
                <th class="w-100 text-nowrap">
                    @Html.DisplayNameFor(model => model.MaxPessoas)<br />
                <input class="w-100 filter" id="MaxPessoas" onkeyup="filter(this)"></input>

            </th>
                <th class="w-100 text-nowrap">
                    @Html.DisplayNameFor(model => model.Dificuldade)<br />
                    <select class="form-select w-100 text-white bg-primary w-100 filter" id="Dificuldade" style="font-size:9px;">
                        <option class="text-white" value="Dificuldade">Todas</option>
                        @foreach (var dif in Html.GetEnumSelectList<Dificuldade>()) {
                            <option class="text-@DifficultiesValue.GetDifficultyColorStr(dif.Value)" value="@dif.Value">@dif.Text</option>
                        }
                    </select>
            </th>
                <th class="w-100 text-nowrap" style="font-size:18px;">
                    <br />
                @Html.DisplayNameFor(model => model.ListaFotos)
            </th>
                <th class="w-100 text-nowrap">
                    @Html.DisplayNameFor(model => model.Sala)<br />
                <input class="w-100 filter" id="Sala_Numero" onkeyup="filter(this)"></input>

            </th>
            <th class="w-100 text-nowrap">
                    @Html.DisplayNameFor(model => model.Preco)<br />
                <input class="w-100 filter" id="Preco" onkeyup="filter(this)"></input>

            </th>
                <th class="w-100 text-nowrap">
                @Html.DisplayNameFor(model => model.Icone)
            </th>
                <th class="w-100 text-nowrap">
                    @Html.DisplayNameFor(model => model.DataCriacao)<br />
                    <div>
                        <i class="bi bi-arrow-down-short" style="cursor:pointer" id="DataCriacao_desc" onclick="filter(this)"></i> <i class="bi bi-arrow-up-short" id="DataCriacao_asc" onclick="filter(this)" style="cursor:pointer"></i>

                    </div>
            </th>
                <th class="w-100 text-nowrap">
                    @Html.DisplayNameFor(model => model.CriadoPorUsername)<br />
                <input class="w-100 filter" id="CriadoPorUsername" onkeyup="filter(this)"></input>

            </th>
            <th>Ações</th>
        </tr>
    </thead>
        <tbody style="font-size: 15px">

        @foreach (var item in Model) {

            <tr class="text-center table-primary align-text-top">
                
                <td class="text-center align-items-center align-content-center">
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td class="text-center align-items-center align-content-center">
                    @if (item.MinPessoas != null) {
                        <div style="width:15vw ;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;" title="@item.Descricao">
                            @Html.DisplayFor(modelItem => item.Descricao)
                        </div>


                    } else {

                        <span>N.A.</span>
                    }
                </td>
                <td class="text-center align-items-center align-content-center">
                    @Html.DisplayFor(modelItem => item.TempoEstimado) Minutos
                </td>
                <td class="text-center align-items-center align-content-center">

                    @if (item.MinPessoas != null) {

                        @Html.DisplayFor(modelItem => item.MinPessoas)
                        ;
                    } else {

                        <span>N.A.</span>
                    }
                </td>
                <td class="text-center align-items-center align-content-center">
                    @if (item.MinPessoas != null) {

                        @Html.DisplayFor(modelItem => item.MaxPessoas)
                        ;
                    } else {

                        <span>N.A.</span>
                    }
                </td>
                <td class="text-center align-items-center align-content-center">
                    <span class="text-@DifficultiesValue.GetDifficultyColor((int) item.Dificuldade)">
                        @Html.DisplayFor(modelItem => item.Dificuldade)
                    </span>
                </td>
                <td class="text-center align-items-center align-content-center">




                    @if (@item.ListaFotos != null || @item.ListaFotos.Any()) {
                        <div id="carouselIndex" class="carousel slide card-text " data-bs-ride="carousel">

                            <div class="carousel-inner" style="width:170px;">
                                @foreach (var i in @item.ListaFotos) {
                                    @if (i.FotoId == @item.ListaFotos.First().FotoId) {
                                        <div class="carousel-item active" data-bs-interval="2000">
                                            <a data-fancybox="gallery" data-caption="Imagem do tema '@Html.DisplayFor(modelItem => item.Nome)'"
                                               href="~/Imagens/@i.Nome"> <img  src="/Imagens/@i.Nome" class="d-block w-100 "></a>

                                        </div>
                                    } else {
                                        <div class="carousel-item" data-bs-interval="2000">
                                            <a data-fancybox="gallery" data-caption="Imagem do tema '@Html.DisplayFor(modelItem => item.Nome)'"
                                               href="~/Imagens/@i.Nome"><img  src="/Imagens/@i.Nome" class="d-block w-100"></a>
                                        </div>
                                    }
                                }
                            </div>
                        </div>





                    } else {

                        <span>N.A.</span>
                    }

                </td>
                <td class="text-center align-items-center align-content-center">
                    @if (item.Sala != null) {
                        <ul class="list-group list-group-horizontal">


                            <li class="list-group-item text-white bg-success flex-fill ms-2">@Html.DisplayFor(modelItem => item.Sala.Numero)</li>
                        </ul>
                    } else {

                        <span>N.A.</span>
                    }
                </td>
                <td class="text-center align-items-center align-content-center">
                    @if (item.Preco != null) {



                        @Html.DisplayFor(modelItem => item.Preco)

                        @:€

                    } else {

                        <span>N.A.</span>
                    }
                </td>
                <td class="text-center align-items-center align-content-center">
                    @if (item.Icone != null) {





                        <i class="text-@DifficultiesValue.GetDifficultyColor((int) item.Dificuldade) @item.Icone fa-2x"></i>


                    } else {

                        <span>N.A.</span>
                    }
                </td>
                <td class="text-center align-items-center align-content-center">
                    @Html.DisplayFor(modelItem => item.DataCriacao)
                </td>
                <td class="text-center align-items-center align-content-center">
                    @Html.DisplayFor(modelItem => item.CriadoPorUsername)
                </td>
                <td class="align-content-center text-nowrap">
                    <a asp-action="Edit" title="Editar" asp-route-id="@item.TemaId"><i class="fa fa-pencil link-success icons-index"></i></a>
                    <a asp-action="Details" title="Ver" asp-route-id="@item.TemaId"><i class="fa-solid fa-circle-info icons-index"></i></a>
                    <a data-bs-toggle="modal" title="Apagar" style="cursor:pointer" data-bs-target="#modalApagar" onclick="teste('@item.TemaId','@item.Nome')"><i class="fa fa-trash icons-index link-danger delete"></i></a>
                </td>
            </tr>
        }
    </tbody>

</table>
</div>
</div>

<script>
  
</script>

@Html.AntiForgeryToken()
<script>
                   
    $("#Dificuldade").on("change",function(){
        console.log($(this).val())
        filter($(this))
    })
    
    function filter(el) {
        var dictCores = new Object();
        var dictVals = new Object();
        var dictSalasNum = new Object();

        var lastId = "#" + $(el).attr('id')
        console.log(lastId)
        $('.filter').each(function (i, obj) {

            if (obj.value != null && obj.value != "") {
                dictVals[$(obj).attr('id')] = obj.value
            }

        });
        if ($(el).attr('id').toLowerCase().indexOf("dat") >= 0) {
            var arr = $(el).attr('id').split("_");
            dictVals[arr[0]] = arr[1];
        }

       
        $.get("/Gerir/Temas/Filter", { dictVals: dictVals,last: lastId,}, function (data, status) {
            $("#tabela").html(data)




        });
        }

</script>
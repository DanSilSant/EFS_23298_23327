@using Humanizer
@using System.Globalization
@model IEnumerable<EFS_23298_23327.Models.Reservas>


    @{

      @* IEnumerable<Reservas> reservasProx = Model.Where(r=> r.ReservaDate>DateTime.Now).ToList().OrderBy(r=>r.ReservaDate);*@

        var r = Model.First();

    Dictionary<int?,string>  randColorsSala=new Dictionary<int?, string>();
        Dictionary<int,int?> idSalasnome=new Dictionary<int, int?>();
        HashSet<int> numSalas = Model.Select(s=> s.Sala.Numero).ToHashSet();
       
        
            
foreach(var c in Model){
        var random = new Random();
        if(!randColorsSala.ContainsKey(c.SalaId)){
           randColorsSala.Add(c.SalaId,String.Format("#{0:X6}", random.Next(0x1000000))); // = "#A197B9")

        }
        if(!idSalasnome.ContainsKey(c.Sala.Numero)){
           idSalasnome.Add(c.Sala.Numero,c.SalaId); // = "#A197B9")

        }

}
ViewBag.RandColors = randColorsSala;
ViewBag.SalaNome = idSalasnome;
((Dictionary<int?,string>)ViewBag.RandColors).GetValueOrDefault(1);
var resHoje = Model.Where(r=> DateTime.Now.Day == r.ReservaDate.Day).Count();
var resAmanha = Model.Where(r=> DateTime.Now.Day+1 == r.ReservaDate.Day).Count();
var resSemana = Model.Where(r=> ISOWeek.GetWeekOfYear(r.ReservaDate) == ISOWeek.GetWeekOfYear(DateTime.Now)).Count();
var resMes = Model.Where(r=> DateTime.Now.Month == r.ReservaDate.Month).Count();
var resAno = Model.Where(r=> DateTime.Now.Year == r.ReservaDate.Year).Count();







        @functions{

    public string GeraAnfsStringHtmlSingle(Reservas s){
       var str="";
       foreach(var a in s.ListaAnfitrioes){
        var v = a.PrimeiroNome + " " + a.UltimoNome;
        if(v.Equals(@TempData["userLoggedNome"])){
       str+= "<li class='list-group-item text-white border-success border-3 bg-secondary flex-fill ms-2' data-bs-toggle='tooltip' data-html='true' data-bs-placement='top' title='EU'>" + v + "</li>";
        }
        str+="<li class='list-group-item text-white bg-warning flex-fill ms-2'>" + v + "</li>";
        }
        
        return str;
       }
       
        public string GetHumanReadableCount(string s,int c){
              return s.ToQuantity(c);
       
           

    }   

    }

    




var str="";


        foreach(var s in numSalas){
            
           str+= "<span class='me-2'>Sala"+s+"<i class='ms-2 bi bi-circle-fill' style='color:"+randColorsSala.GetValueOrDefault(idSalasnome.GetValueOrDefault(s))+"'></i></span>";
           str+="\t\t";
        }
        var o = str;



    }

     


    <div class="container vh-99 d-flex justify-content-center align-items-center">

        <div class="d-inline-block d-flex flex-row">
            
     <div class="card border-primary me-5 mb-5" style="max-width: 50rem;">
         <select class="form-select text-center" aria-label="Default select example">
  <option value="hoje" selected>Hoje</option>
  <option value="amanha">Amanhã</option>
  <option value="semana">Esta semana</option>
  <option value="mes">Este mês</option>
</select>
  <div class="card-header text-center h3 border-bottom border-secondary border-3">@GetHumanReadableCount("reserva",resHoje)</div>
  <div class="card-body ">
      
  </div>
</div>

            <div class="card border-primary mb-5" style="max-width: 50rem;">
  <div class="card-header text-center h3 border-bottom border-secondary border-3">Próximas reservas</div>
  <div class="card-body ">
      <btn class="card-title h4 w-100 btn" style="background-color:@randColorsSala.GetValueOrDefault(@r.SalaId)" onclick='showModal(
"@DifficultiesValue.GetDifficultyColor((int)@r.TemaDif)","@r.ReservaId","@r.Cliente.PrimeiroNome @r.Cliente.UltimoNome","@r.ReservaDate.ToString("dd-MM-yyyy HH:mm:ss")","@r.ReservaEndDate.ToString("dd-MM-yyyy HH:mm:ss")"
      ,"@r.NumPessoas","@randColorsSala.GetValueOrDefault(r.SalaId)",
      "@r.Sala.Numero","@r.TemaNome","@r.TotalPreco","@GeraAnfsStringHtmlSingle(r)")'>Reserva nº @r.ReservaId - @DateTime.Now.AddHours((r.ReservaDate-DateTime.Now).Hours).Humanize(true) - Sala @Model.First().Sala.Numero</btn>
   
      <div class="justify-content-center">
          <div class="row">
              
      @foreach(var s in Model.Skip(1).Take(5)){
          <div class="col">
           <btn class="card-title h2 w-80 btn" style="background-color:@randColorsSala.GetValueOrDefault(@s.SalaId)" onclick='showModal(
"@DifficultiesValue.GetDifficultyColor((int)@s.TemaDif)","@s.ReservaId","@s.Cliente.PrimeiroNome @s.Cliente.UltimoNome","@s.ReservaDate.ToString("dd-MM-yyyy HH:mm:ss")","@s.ReservaEndDate.ToString("dd-MM-yyyy HH:mm:ss")"
      ,"@s.NumPessoas","@randColorsSala.GetValueOrDefault(s.SalaId)",
      "@s.Sala.Numero","@s.TemaNome","@s.TotalPreco","@GeraAnfsStringHtmlSingle(s)")'>Reserva nº @s.ReservaId - @DateTime.Now.AddHours((s.ReservaDate-DateTime.Now).Hours).Humanize(true) - Sala @s.Sala.Numero</btn>
   </div>

      }
      </div>
      </div>
  </div>
</div>


            </div>
        
    </div>
        
    <div id="teste" class="text-end">@Html.Raw(str)</div>
<div id="rModal"></div>
<div id='calendar' class=" text-white "></div>
    
</div>


<script>
    document.addEventListener('DOMContentLoaded', function () {
    $("#ex").modal("show");


            var calendarEl = document.getElementById('calendar');
    var calendar = new FullCalendar.Calendar(calendarEl, {
        themeSystem: 'bootstrap5',

        initialView: 'timeGridWeek',
        locale: 'pt',
        slotEventOverlap: false,
         resourceGroupField: 'groupId',

        initialDate: new Date(),
        stickyHeaderDates:true,
        
        eventMouseEnter: function(info){
            $(info.el).css('cursor','pointer');
        },
        
        slotMinTime: "05:00:00",
        slotMaxTime: "24:00:00",
    
        hiddenDays: [0],
        eventOverlap: false,
        timeZone: 'UTC',
        selectOverlap: false,
        nowIndicator: true,
        selectable: false,
        validRange: {
            start: '@DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss")'
        },
        eventColor: '#2a602a',
        selectAllow: function (info) {
            console.log(info.start >= new Date())
            return (info.start >= new Date());
        },
        editable: false,
        eventDisplay: 'block',
        eventStartEditable: false,
        eventDurationEditable: false,
        contentHeight: 'auto',

        allDaySlot: false,
        headerToolbar: {
        left: 'prev,dayGridMonth',
        center: 'title,today',
        right: "next,timeGridWeek"


    },

        buttonText: {

        today: 'Ver dia atual',
        month: 'ver mês',
        week: 'ver semana',
        day: 'ver dia'

    },

        eventDidMount: function (info) {
            $(info.el).tooltip({
                title: info.event.extendedProps.description,
                placement: "top",
                trigger: "hover",
                container: "body"
            });
        },
       


        events: [



    @foreach (var i in Model) {
        @if (i.Equals(Model.Last())) {
            <text>{
                    title: '@i.Cliente.PrimeiroNome @i.Cliente.UltimoNome',
                    start: '@i.ReservaDate.ToString("yyyy-MM-ddTHH:mm:ss")',
                    end: '@i.ReservaEndDate.ToString("yyyy-MM-ddTHH:mm:ss")',
                    description: 'Sala @i.Sala.Numero',
                    groupId:'@i.SalaId',
                    color:'@randColorsSala.GetValueOrDefault(i.SalaId)',
                    extendedProps: {
        nome: '@i.Cliente.PrimeiroNome @i.Cliente.UltimoNome',
        idReserva:'@i.ReservaId',
        dataI: '@i.ReservaDate.ToString("dd-MM-yyyy HH:mm:ss")',
        dataF: '@i.ReservaEndDate.ToString("dd-MM-yyyy HH:mm:ss")',
                salaColor: '@randColorsSala.GetValueOrDefault(i.SalaId)',

        temaNome: '@i.TemaNome',
        diffStr : '@DifficultiesValue.GetDifficultyColor((int)i.TemaDif)',
         sala: "@i.Sala.Numero",
        nPessoas:'@i.NumPessoas',
        totalPreco:'@i.TotalPreco',
        @{
            var anfStr="";
            @foreach(var a in i.ListaAnfitrioes){
                anfStr+=a.PrimeiroNome + " ";
                anfStr+=@a.UltimoNome + ",";
            }
            anfStr=anfStr.Remove(anfStr.Length-1);
        }
        nomesAnf:'@anfStr'
       
      },


                @if (i.Cliente.UserName.Equals(User.Identity.Name)) {
                    @:color: '#a463eb',
                }
                allDay: false
                        }</text>
        } else {
            <text>{
                    title: '@i.Cliente.PrimeiroNome @i.Cliente.UltimoNome; @TimeSpan.FromMilliseconds((i.ReservaDate-DateTime.Now).TotalMilliseconds).Humanize(2    )',
                    start: '@i.ReservaDate.ToString("yyyy-MM-ddTHH:mm:ss")',
                    end: '@i.ReservaEndDate.ToString("yyyy-MM-ddTHH:mm:ss")',
                    description: 'Sala @i.Sala.Numero',
                    color:'@randColorsSala.GetValueOrDefault(i.SalaId)',
                    groupId:'@i.SalaId',
                    extendedProps: {
         nome: '@i.Cliente.PrimeiroNome @i.Cliente.UltimoNome',
        dataI: '@i.ReservaDate.ToString("dd-MM-yyyy HH:mm:ss")',
        idReserva:'@i.ReservaId',
        dataF: '@i.ReservaEndDate.ToString("dd-MM-yyyy HH:mm:ss")',
        temaNome: '@i.TemaNome',
        salaColor: '@randColorsSala.GetValueOrDefault(i.SalaId)',
        diffStr : '@DifficultiesValue.GetDifficultyColor((int)i.TemaDif)',
         sala: "@i.Sala.Numero",
        nPessoas:'@i.NumPessoas',
        totalPreco:'@i.TotalPreco',
        @{
            var anfStr="";
            @foreach(var a in i.ListaAnfitrioes){
                anfStr+=a.PrimeiroNome + " ";

                anfStr+=@a.UltimoNome + ",";
            }
            anfStr=anfStr.Remove(anfStr.Length-1);
        }
        nomesAnf:'@anfStr'
       
      },



                @if (i.Cliente.UserName.Equals(User.Identity.Name)) {
                    @:color: '#a463eb',
                    
                }
                    allDay: false
                           }, </text>

        }       }
                ],
                 eventClick: function(info) {
                     console.log(info.event.extendedProps);
                     var nome = info.event.extendedProps.nome;
                     var dataI = info.event.extendedProps.dataI;
                     var dataF = info.event.extendedProps.dataF;
                     var salaColor= info.event.extendedProps.salaColor;
                     var reservaId= info.event.extendedProps.idReserva;
                     var anfs = info.event.extendedProps.nomesAnf;
                     console.log(anfs)
                     var totalPreco = info.event.extendedProps.totalPreco;
                     var tema = info.event.extendedProps.temaNome;
                     var nPessoas = info.event.extendedProps.nPessoas;
                      var difStr = info.event.extendedProps.diffStr;
                     var sala = info.event.extendedProps.sala;
                     console.log(info.event.extendedProps);
                    var anfsArr = anfs.split(',');
                    var nomeUser = '@TempData["userLoggedNome"]';

                    var str="";
                    $.each(anfsArr,function(i,v){
                      
                        if(v==nomeUser){
                            str+="<li class='list-group-item text-white border-success border-3 bg-secondary flex-fill ms-2' data-bs-toggle='tooltip' data-html='true' data-bs-placement='top' title='EU'>" + v + "</li>"
                        }else{
                          str+="<li class='list-group-item text-white bg-warning flex-fill ms-2'>" + v + "</li>"

                        }
                        
                    });



                     $("#rModal").html([
                  `<div class="modal text-center" id="ex" tabindex="-1">`,
  `<div class="modal-dialog text-center">`,
    `<div class="modal-content border-${difStr} border-2">`,
      `<div class="modal-header text-center">`,
        `<h5 class="modal-title text-center">Reserva ${reservaId} - ${nome}</h5>`,
        `<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>`,
     `</div>`,
      `<div class="modal-body">`,
          `<div class="container-fluid text-center justify-content-center">`,
        `<div class="row">`,
       ` <div class="col ">`,
                `<div >`,
                   `Ínicio :<span class="text-success ms-1">${dataI}</span>`,
     
              `</div>`,
              `<div >`,
                   `Fim : <span class="text-danger ms-1">${dataF}</span>`,
     
              `</div>`,
            `</div> `,
           ` <div class="col">`,
                `<div class="text-info">`,
                  ` Número de pessoas: ${nPessoas}`,
              `</div>`,
              `<div >`,
                   `Sala: <span style="color:${salaColor}">${sala}</span>`,
              `</div>`,
            `</div> `,
         `</div>` , 
         `<div class="mt-2 text-center  ">`,
         `Tema: <span class="text-${difStr}">${tema}</span>`,
            ` </div>`,
             `<div class="mt-2 text-center  ">`,
        ` Preço Total: <span class="">${totalPreco}€</span>`,
            ` </div>`,
        ` <div class="mt-5 text-center  ">`,
         `<span class="">Anfitriões</span></br>`,
         
         `<ul class="list-group text-break list-group-horizontal mt-2 mb-2">`,
         `${str}`,
         `</div>`,
         ` </div>`,
     ` </div>`,

      `<div class="modal-footer">`,

        `<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>`,
      `</div>`,
    `</div>`,
  `</div>`,
`</div>`  ].join(""));  

$("#ex").modal("show");
                 },
    eventTimeFormat: { // like '14:30:00'
        hour: '2-digit',
            minute: '2-digit',

                meridiem: false,
                    hour12: false
    },

    
    });

            
 


        calendar.render();
    
            });
            function showModal(difStr,reservaId,nome,dataI,dataF,nPessoas,salaColor,sala,tema,totalPreco,str){

     
                     $("#rModal").html([
                  `<div class="modal text-center" id="ex" tabindex="-1">`,
  `<div class="modal-dialog text-center">`,
    `<div class="modal-content border-${difStr} border-2">`,
      `<div class="modal-header text-center">`,
        `<h5 class="modal-title text-center">Reserva ${reservaId} - ${nome}</h5>`,
        `<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>`,
     `</div>`,
      `<div class="modal-body">`,
          `<div class="container-fluid text-center justify-content-center">`,
        `<div class="row">`,
       ` <div class="col ">`,
                `<div >`,
                   `Ínicio :<span class="text-success ms-1">${dataI}</span>`,
     
              `</div>`,
              `<div >`,
                   `Fim : <span class="text-danger ms-1">${dataF}</span>`,
     
              `</div>`,
            `</div> `,
           ` <div class="col">`,
                `<div class="text-info">`,
                  ` Número de pessoas: ${nPessoas}`,
              `</div>`,
              `<div >`,
                   `Sala: <span style="color:${salaColor}">${sala}</span>`,
              `</div>`,
            `</div> `,
         `</div>` , 
         `<div class="mt-2 text-center  ">`,
         `Tema: <span class="text-${difStr}">${tema}</span>`,
            ` </div>`,
             `<div class="mt-2 text-center  ">`,
        ` Preço Total: <span class="">${totalPreco}€</span>`,
            ` </div>`,
        ` <div class="mt-5 text-center  ">`,
         `<span class="">Anfitriões</span></br>`,
         
         `<ul class="list-group text-break list-group-horizontal mt-2 mb-2">`,
         `${str}`,
         `</div>`,
         ` </div>`,
     ` </div>`,

      `<div class="modal-footer">`,

        `<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>`,
      `</div>`,
    `</div>`,
  `</div>`,
`</div>`  ].join(""));  

$("#ex").modal("show");




 }
</script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
@model EFS_23298_23327.Models.Salas
@using EFS_23298_23327.Data
@{
    ViewData["Title"] = "Privacy Policy";
}

@{
     var t = TempData["tema"] as Temas;

     
} @{
                        String d = DifficultiesValue.GetDifficultyStr((int)t.Dificuldade).ToString();
                        String c = DifficultiesValue.GetDifficultyColor((int)t.Dificuldade);
                        
                                }

@if (@TempData["ErroCliente"] != null) {
    <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
        @TempData["ErroCliente"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (@TempData["ReservaSucesso"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
          @TempData["ReservaSucesso"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    
    <div class="card border-secondary mb-3 " id="tema"  >
   <div class="card-header border border-@c border-2 h3 text-center text-@c">@t.Nome <i class=" ms-5 @t.Icone fa-1x"></i></div>
  <div class="card-body">

    <h4 class="card-title text-center"></h4>

    <div id="carouselHero" class="carousel slide card-text "  data-bs-ride="carousel">
  <div class="carousel-inner">
       @foreach(var i in t.ListaFotos){
         @if(i.FotoId == t.ListaFotos.First().FotoId){
             <div class="carousel-item active" data-bs-interval="1000">
                 <img src="/Imagens/@i.Nome" class="d-block w-100 " >
                </div>
            }
            else
            {
                <div class="carousel-item" data-bs-interval="2000">
                    <img src="/Imagens/@i.Nome" class="d-block w-100" alt="...">
                 </div>
            }
        }
  </div>
<div class="text-center card-text mt-5">
    <div class="d-flex justify-content-center">
    <div class="row text-center"> 
          <span class="bi bi-people fa-2x"> </span>
          <span>@t.MinPessoas - @t.MaxPessoas</span>
    </div>
    <div class="row text-center"> 
          <span class="bi bi-stopwatch fa-2x"> </span>
          <span>@t.TempoEstimado Minutos</span>
    </div>
    <div class="row text-center"> 
          <span class="bi bi-coin fa-2x"> </span>
          <span>@t.Preco€/Pessoa</span>
    </div>
    </div>

    </div>
    <div class="text-center mt-5 pt-3">
        <span class="h2 text-light">
            @t.Dificuldade
        </span>
            <div class="progress mt-3">
                   
            <div class="progress-bar  progress-bar-striped bg-@c" role="progressbar" style="width:@d%;" aria-valuenow="@d" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
    </div>
    <div class="text-center mt-5">
        <span class="h4">  @t.Descricao</span>
    </div>

</div>
</div>
  </div>
</div>


    

    @********************************************************@

<div id='calendar' class=" text-white " ></div>

<script>
 
   $(document).ready(function () {
    // Handler for .ready() called.
    
});
   
    document.addEventListener('DOMContentLoaded', function () {
        $('html, body').animate({
        scrollTop: $('#tema').offset().top
    }, 'slow');
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            themeSystem: 'bootstrap5',
           
            initialView: 'timeGridWeek',
            locale: 'pt',
            slotEventOverlap:false,
            
            initialDate: new Date(),
            slotMinTime: "08:00:00",
            slotMaxTime: "22:00:00",
            @{
                
                var tempo= (int) t.TempoEstimado + 30;
                var strTempo = TimeSpan.FromMinutes(tempo).ToString(@"hh\:mm\:ss");
                
                <text>slotDuration: '@strTempo',</text>
            }
            
            hiddenDays:[0],
            eventOverlap:false,
            timeZone: 'UTC',
            selectOverlap: false,
            nowIndicator:true,
            selectable: true,
            eventColor: '#2a602a',
            selectAllow: function (info) {
                console.log(info.start >= new Date())
                return (info.start >= new Date());
            },
          editable:true,
            eventDisplay: 'block',
            eventStartEditable:true,
            eventDurationEditable:false,
            contentHeight:'auto',
            
            allDaySlot: false,
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay'
                
               
            }, 
            
            buttonText:{
                    
                today: 'atual',
                month: 'ver mês',
                week: 'ver semana',
                day: 'ver dia'
                
            },
            
            eventDidMount: function (info) {
                $(info.el).tooltip({
                    title: info.event.extendedProps.description,
                    placement: "top",
                    trigger: "hover",
                    container: "body"
                });
            },
            
            
            
            events: [
                
                
                
    @foreach (var i in Model.ListaReservas) {
        @if (i.Equals(Model.ListaReservas.Last())) {
            <text>{
            title: '@i.NumPessoas/@t.MaxPessoas Pessoas',
            start: '@i.ReservaDate.ToString("yyyy-MM-ddTHH:mm:ss")',
            end: '@i.ReservaEndDate.ToString("yyyy-MM-ddTHH:mm:ss")',
            description:'Reserva para  "@i.Cliente.UserName".',
            
           
            @if(i.Cliente.UserName.Equals(User.Identity.Name)){
           @: color:'#a463eb',
            }
            allDay: false
            }</text>
        } else {
             <text>{
             title: '@i.NumPessoas/@t.MaxPessoas Pessoas',
            start: '@i.ReservaDate.ToString("yyyy-MM-ddTHH:mm:ss")',
            end: '@i.ReservaEndDate.ToString("yyyy-MM-ddTHH:mm:ss")',
            description: 'Reserva para  "@i.Cliente.UserName".',
           
           
           
            @if (i.Cliente.UserName.Equals(User.Identity.Name)) {
               @: color:'#a463eb',
            }
            allDay: false
               },</text>
                
        }}  
            ],
            eventTimeFormat: { // like '14:30:00'
                hour: '2-digit',
                minute: '2-digit',
               
                meridiem: false,
                hour12: false
            },

        selectAllow: function (info) {
            return (info.start >= new Date());
        },

            select: function (info) {
                @if(User.IsInRole("Admin")){
                     @:console.log(info.startStr);
                     @:console.log(info.endStr);
                     @:console.log(info.view)
                }
                else{
                    <text>
                     $.post('/Home/Reserva', { date: info.startStr }, function (result) {
                    if(result=="ok"){
                    location.reload();
                    }else{
                    location.reload();
                    }
                })
                    </text>
                }
                
                
            },
        });
        calendar.render();
    });

</script>
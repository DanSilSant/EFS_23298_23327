@model IEnumerable<Utilizadores>

@{
    ViewData["Title"] = "Utilizadores";

    var dictRoles = (Dictionary<String, HashSet<String>>)TempData["DictRolesUser"];

    HashSet<String> roles = (HashSet<String>)TempData["AllRoles"];
}

<script>
    function teste(id, nome) {
        $('#nomeUser').text(nome);
        $('#apagarUser').attr('action', '/Gerir/Utilizadores/Delete/' + id);
    }


</script>
<div class="modal fade" id="modalApagar" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered ">
        <div class="modal-content">
            <div class="modal-header modal-header-danger">
                <h5 class="modal-title" id="exampleModalLabel"><i class="fa-solid fa-triangle-exclamation display-6 me-5 "></i> Deseja apagar utilizador '<span id="nomeUser">a</span>' ?</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-footer ">

                <button type="button" class="btn btn-secondary mr-auto" data-bs-dismiss="modal">Fechar</button>
                <form id="apagarUser" method="post">
                    <button type="submit" class="btn btn-danger">Apagar</button>
                </form>
            </div>
        </div>
    </div>
</div>

<h1>Utilizadores</h1>
@if (@TempData["UtilizadorApagado"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        Utilizador <strong>@TempData["UtilizadorApagado"]</strong> apagado com sucesso!
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (@TempData["NomeUtilizadorCriado2"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        Utilizador <strong>@TempData["NomeUtilizadorCriado2"]</strong> criado com sucesso!
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (@TempData["ErroAdmin"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @Html.Raw(@TempData["ErroAdmin"])
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<p>
    <a asp-action="Create">
        <button class="btn btn-info"> <i class="fa fa-add me-2"></i>Criar utilizador</button>
    </a>

</p>

<div id="tabela">
<span class="text-center text-white mb-2">@AppUtils.GetHumanReadableCount("resultado", Model.Count())</span>

<table class="table text-center table-bordered table-hover table-striped table-secondary">
    <thead>
        <tr class="table-info text-center">
                <th class="w-100">
                    <span class="w-100">@Html.DisplayNameFor(model => model.Id)</span><br />
                    <input class="w-100 filter" style="width:100%" id="Id" onkeyup="filter(this)"></input>
            </th>
                <th class="w-100">
                @Html.DisplayNameFor(model => model.UserName)
                    <input class="w-100 filter" id="UserName" onkeyup="filter(this)"></input>
            </th>
                <th class="w-100 text-nowrap">
                @Html.DisplayNameFor(model => model.PrimeiroNome)
                <br/>
                <input class="w-100 filter" id="PrimeiroNome" onkeyup="filter(this)"></input>


            </th>
                <th class="w-100 text-nowrap">
                    @Html.DisplayNameFor(model => model.UltimoNome) <br />
                    <input class="w-100  filter" id="UltimoNome" onkeyup="filter(this)"></input>

            </th>
                <th class="w-100 text-nowrap">
                    @Html.DisplayNameFor(model => model.Email) <br />
                    <input class="w-100  filter" id="Email" onkeyup="filter(this)"></input>
            </th>
                <th class="w-100 text-nowrap">
                    @Html.DisplayNameFor(model => model.CriadoPorUsername) <br />
                    <input class="w-100  filter" id="CriadoPorUsername" onkeyup="filter(this)"></input>
            </th>
                <th class="w-100 text-nowrap">
                @* @Html.DisplayNameFor(model => model.Roles)*@Roles
                    <br />
                <select multiple="multiple" id="ListaRoles" class="form-control  multiple-checkboxes">

                    @foreach (var i in @roles)
                    {


                      
                            <option class=" text-white bg-warning flex-fill" value="@i">@i</option>

                       


                    }
                </select>




            </th>
                <th class="w-100 text-nowrap">
                    @Html.DisplayNameFor(model => model.DataCriacao)
                    <br />
                <i class="bi bi-arrow-down-short" style="cursor:pointer" id="DataCriacao_desc" onclick="filter(this)"></i> <i class="bi bi-arrow-up-short" id="DataCriacao_asc" onclick="filter(this)" style="cursor:pointer"></i>

            </th>
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="table-primary">
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @if (item.UltimoNome != null)
                    {
                        @Html.DisplayFor(modelItem => item.PrimeiroNome)
                    }
                    else
                    {
                        @:N.A
                    }
                </td>
                <td>
                    @if (item.UltimoNome != null)
                    {
                        @Html.DisplayFor(modelItem => item.UltimoNome)
                    }
                    else
                    {
                        @:N.A
                    }

                </td>
                <td>
                    @if (item.UltimoNome != null)
                    {
                        @Html.DisplayFor(modelItem => item.Email)
                    }
                    else
                    {
                        @:N.A
                    }
                </td>
                <td>
                    @if (item.CriadoPorUsername != null)
                    {
                        @Html.DisplayFor(modelItem => item.CriadoPorUsername)
                    }
                    else
                    {
                        @:N.A
                    }
                </td>
                <td>

                    @if (dictRoles.GetValueOrDefault(item.Id).Any())
                    {
                        <ul class="list-group list-group-horizontal">
                            @foreach (var role in dictRoles.GetValueOrDefault(item.Id))
                            {
                                @if (role.Equals("Admin"))
                                {
                                    <li class="list-group-item text-white  bg-danger flex-fill ms-2">@role</li>

                                }
                                @if (role.Equals("Anfitriao"))
                                {
                                    <li class="list-group-item text-white  bg-warning flex-fill ms-2">@role</li>

                                }
                                @if (role.Equals("Cliente"))
                                {
                                    <li class="list-group-item text-white  bg-success flex-fill ms-2">@role</li>

                                }



                            }
                        </ul>

                    }
                    else
                    {

                        <span>N.A.</span>
                    }

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataCriacao)
                </td>
                <td class="align-content-center text-nowrap">
                    <a asp-action="Edit" title="Editar" asp-route-id="@item.Id"><i class="fa fa-pencil link-success icons-index"></i></a>
                    <a asp-action="Details" title="Ver" asp-route-id="@item.Id"><i class="fa-solid fa-circle-info icons-index"></i></a>
                    <a data-bs-toggle="modal" title="Apagar" style="cursor:pointer" data-bs-target="#modalApagar" onclick="teste('@item.Id','@item.UserName')"><i class="fa fa-trash icons-index link-danger delete"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>
</div>
                    <script>
    $(document).ready(function () {
        $("#ListaRoles").multiselect({
            templates: {
                button: '<button type="button" class="multiselect dropdown-toggle btn btn-primary" data-bs-toggle="dropdown" aria-expanded="false"><span class="multiselect-selected-text"></span></button>',
            },
            buttonWidth: '100%',
            nonSelectedText: 'Selecionar anfitriões',

            buttonWidth: '400px',
            onChange: function (option, checked, select) {
                console.log($("#ListaRoles"));
                filter($("#ListaRoles"));
            },
            filterBehavior: "text",
            enableCaseInsensitiveFiltering: true,
            onSelectAll: function (options) {
                console.log($("#ListaRoles"));
                filter($("#ListaRoles"));
            },
            onDeselectAll: function (options) {
                console.log($("#ListaRoles"));
                filter($("#ListaRoles"));
            },
            enableFiltering: true,
            dropUp: false,
            popupContainer: '<div class="multiselect-container dropdown-menu" style="width: 279px"></div>',
            maxHeight: 400,
            includeSelectAllOption: true,
            selectAllText: 'Selecionar todos',
            numberDisplayed: 0,
            allSelectedText: false

        });
    });

    function filter(el) {
        var dictRoles = new Object();
        var dictVals = new Object();

        var lastId = "#" + $(el).attr('id')
        console.log(lastId)
        $('.filter').each(function (i, obj) {

            if (obj.value != null && obj.value != "") {
                dictVals[$(obj).attr('id')] = obj.value
            }

        });
        if ($(el).attr('id').toLowerCase().indexOf("dat") >= 0) {
            var arr = $(el).attr('id').split("_");
            dictVals[arr[0]] = arr[1];
        }

        console.log(dictVals)

        var listaAnfStr = ($("#ListaRoles").val()).join(",");
        console.log(listaAnfStr);

    @foreach (var i in dictRoles)
    {
        @:dictRoles['@i.Key'] ='@i.Value';
    }
    @if (!dictRoles.Any())
    {
        @:dictRoles['']="";
    }

            console.log(dictRoles)

        $.get("/Gerir/Utilizadores/Filter", { dictVals: dictVals, dic: dictRoles, last: lastId, roles: ($("#ListaRoles").val()).join(",") }, function (data, status) {
            $("#tabela").html(data)




        });

    }


                    </script>
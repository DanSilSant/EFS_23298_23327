@model IEnumerable<Utilizadores>


@{



    var dicVals = new Dictionary<string, string>();
    if (TempData["dicVals"] != null)
    {
        dicVals = (Dictionary<string, string>)@TempData["dicVals"];

    }
    HashSet<String> roles = (HashSet<String>)TempData["AllRoles"];
    var dictRoles = (Dictionary<String, HashSet<String>>)TempData["DictRolesUser"];

   // HashSet<String?> anfs = Model.SelectMany(a => a.ListaAnfitrioes).Select(a => a).ToHashSet();
    



}

<span class="text-center text-white mb-2">@AppUtils.GetHumanReadableCount("resultado", Model.Count())</span>


<table class="table text-center table-bordered table-hover table-striped table-secondary">
    <thead>
        <tr class="table-info text-center">
            <th class="w-100">
                <span class="w-100">@Html.DisplayNameFor(model => model.Id)</span><br />
                <input class="w-100 filter" style="width:100%" id="Id" onkeyup="filter(this)"></input>
            </th>
            <th class="w-100">
                @Html.DisplayNameFor(model => model.UserName)
                <input class="w-100 filter" id="UserName" onkeyup="filter(this)"></input>
            </th>
            <th class="w-100 text-nowrap">
                @Html.DisplayNameFor(model => model.PrimeiroNome)
                <br />
                <input class="w-100 filter" id="PrimeiroNome" onkeyup="filter(this)"></input>


            </th>
            <th class="w-100 text-nowrap">
                @Html.DisplayNameFor(model => model.UltimoNome) <br />
                <input class="w-100  filter" id="UltimoNome" onkeyup="filter(this)"></input>

            </th>
            <th class="w-100 text-nowrap">
                @Html.DisplayNameFor(model => model.Email) <br />
                <input class="w-100  filter" id="Email" onkeyup="filter(this)"></input>
            </th>
            <th class="w-100 text-nowrap">
                @Html.DisplayNameFor(model => model.CriadoPorUsername) <br />
                <input class="w-100  filter" id="CriadoPorUsername" onkeyup="filter(this)"></input>
            </th>
            <th class="w-100 text-nowrap">
                @* @Html.DisplayNameFor(model => model.Roles)*@Roles
                <br />
                <select multiple="multiple" id="ListaRoles" class="form-control  multiple-checkboxes">

                    @foreach (var i in @roles) {



                        <option class=" text-white bg-@RolesColourValue.GetRoleColour(i) flex-fill" value="@i">@i</option>

                    }
                </select>




            </th>
            <th class="w-100 text-nowrap">
                @Html.DisplayNameFor(model => model.DataCriacao)
                <br />
                <i class="bi bi-arrow-down-short" style="cursor:pointer" id="DataCriacao_desc" onclick="filter(this)"></i> <i class="bi bi-arrow-up-short" id="DataCriacao_asc" onclick="filter(this)" style="cursor:pointer"></i>

            </th>
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
        
        @foreach (var item in Model)
        {
            <tr class="table-primary">
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @if (item.UltimoNome != null)
                    {
                        @Html.DisplayFor(modelItem => item.PrimeiroNome)
                    }
                    else
                    {
                        @:N.A
                    }
                </td>
                <td>
                    @if (item.UltimoNome != null)
                    {
                        @Html.DisplayFor(modelItem => item.UltimoNome)
                    }
                    else
                    {
                        @:N.A
                    }

                </td>
                <td>
                    @if (item.UltimoNome != null)
                    {
                        @Html.DisplayFor(modelItem => item.Email)
                    }
                    else
                    {
                        @:N.A
                    }
                </td>
                <td>
                    @if (item.CriadoPorUsername != null)
                    {
                        @Html.DisplayFor(modelItem => item.CriadoPorUsername)
                    }
                    else
                    {
                        @:N.A
                    }
                </td>
                <td>

                    @if (dictRoles.GetValueOrDefault(item.Id).Any())
                    {
                        <ul class="list-group list-group-horizontal">
                            @foreach (var role in dictRoles.GetValueOrDefault(item.Id))
                            {
                               
                                
                                    <li class="list-group-item text-white  bg-@RolesColourValue.GetRoleColour(role) flex-fill ms-2">@role</li>

                                



                            }
                        </ul>

                    }
                    else
                    {

                        <span>N.A.</span>
                    }

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DataCriacao)
                </td>
                <td class="align-content-center text-nowrap">
                    <a asp-action="Edit" title="Editar" asp-route-id="@item.Id"><i class="fa fa-pencil link-success icons-index"></i></a>
                    <a asp-action="Details" title="Ver" asp-route-id="@item.Id"><i class="fa-solid fa-circle-info icons-index"></i></a>
                    <a data-bs-toggle="modal" title="Apagar" style="cursor:pointer" data-bs-target="#modalApagar" onclick="teste('@item.Id','@item.UserName')"><i class="fa fa-trash icons-index link-danger delete"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>































                    <script>


    $(".table").ready(function () {
        var tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
        var tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))

        var dictVals = new Object();
        $("#ListaRoles").multiselect('destroy');
        $("#ListaRoles").multiselect({
            templates: {
                button: '<button type="button" class="multiselect dropdown-toggle btn btn-primary" data-bs-toggle="dropdown" aria-expanded="false"><span class="multiselect-selected-text"></span></button>',
            },
            buttonWidth: '100%',
            nonSelectedText: 'Selecionar anfitriões',
            buttonWidth: '400px',

            onChange: function (option, checked, select) {
                console.log($("#ListaRoles"));
                filter($("#ListaRoles"));
            },
            filterBehavior: "text",
            enableCaseInsensitiveFiltering: true,
            onSelectAll: function (options) {
                console.log($("#ListaRoles"));
                filter($("#ListaRoles"));
            },
            onDeselectAll: function (options) {
                console.log($("#ListaRoles"));
                filter($("#ListaRoles"));
            },
            enableFiltering: true,
            dropUp: false,
            popupContainer: '<div class="multiselect-container dropdown-menu" style="width: 279px"></div>',
            maxHeight: 400,
            includeSelectAllOption: true,
            selectAllText: 'Selecionar todos',
            numberDisplayed: 0,
            allSelectedText: false

        });


    @foreach (var i in dicVals)
    {
        @:$("#@i.Key").val("@i.Value").change();
        @:console.log("#@i.Key");
    }
        })














    
              var lastId = "@TempData["Last"]";
    console.log(lastId.toLowerCase().indexOf("ListaAnfitrioes"));

    if ("@TempData["Listaroles"]" != null) {
        var arr = [];
    @foreach (var i in (List<String>)@TempData["Listaroles"])
    {
        @:arr.push("@i");
    }

       
        
        $("#ListaRoles").multiselect('select', arr);
    }

    if ( lastId.toLowerCase().indexOf("listarol") >= 0 || lastId.toLowerCase().indexOf("dat") >= 0) {

    } else {
        var fldLength = $(lastId).val().length;
        $(lastId).focus();
        $(lastId)[0].setSelectionRange(fldLength, fldLength);
    }
                    </script>
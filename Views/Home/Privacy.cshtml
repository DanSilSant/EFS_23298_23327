@model EFS_23298_23327.Models.Salas

@{
    ViewData["Title"] = "Privacy Policy";
}



@if (@TempData["ErroCliente"] != null) {
    <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
        @TempData["ErroCliente"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (@TempData["ReservaSucesso"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
          @TempData["ReservaSucesso"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

<div id='calendar' class=" text-white " ></div>

<script>
 
   
   
    document.addEventListener('DOMContentLoaded', function () {

      
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            themeSystem: 'bootstrap5',
           
            initialView: 'timeGridWeek',
            locale: 'pt',
            slotEventOverlap:false,
            
            initialDate: new Date(),
            slotMinTime: "08:00:00",
            slotMaxTime: "22:00:00",
            @{
                var t= TempData["tema"] as Temas;
                var tempo= (int) t.TempoEstimado + 30;
                var strTempo = TimeSpan.FromMinutes(tempo).ToString(@"hh\:mm\:ss");
                
                <text>slotDuration: '@strTempo',</text>
            }
            
            hiddenDays:[0],
            eventOverlap:false,
            timeZone: 'UTC',
            selectOverlap: false,
            nowIndicator:true,
            selectable: true,
            eventColor: '#2a602a',
            selectAllow: function (info) {
                console.log(info.start >= new Date())
                return (info.start >= new Date());
            },
          editable:true,
            eventDisplay: 'block',
            eventStartEditable:true,
            eventDurationEditable:false,
            contentHeight:'auto',
            
            allDaySlot: false,
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay'
                
               
            }, 
            
            buttonText:{
                    
                today: 'atual',
                month: 'ver mês',
                week: 'ver semana',
                day: 'ver dia'
                
            },
            
            eventDidMount: function (info) {
                $(info.el).tooltip({
                    title: info.event.extendedProps.description,
                    placement: "top",
                    trigger: "hover",
                    container: "body"
                });
            },
            
            
            
            events: [
                
                
                
    @foreach (var i in Model.ListaReservas) {
        @if (i.Equals(Model.ListaReservas.Last())) {
            <text>{
            title: '@i.NumPessoas/@t.MaxPessoas Pessoas',
            start: '@i.ReservaDate.ToString("yyyy-MM-ddTHH:mm:ss")',
            end: '@i.ReservaEndDate.ToString("yyyy-MM-ddTHH:mm:ss")',
            description:'Reserva para  "@i.Cliente.UserName".',
            
           
            @if(i.Cliente.UserName.Equals(User.Identity.Name)){
           @: color:'#a463eb',
            }
            allDay: false
            }</text>
        } else {
             <text>{
             title: '@i.NumPessoas/@t.MaxPessoas Pessoas',
            start: '@i.ReservaDate.ToString("yyyy-MM-ddTHH:mm:ss")',
            end: '@i.ReservaEndDate.ToString("yyyy-MM-ddTHH:mm:ss")',
            description: 'Reserva para  "@i.Cliente.UserName".',
           
           
           
            @if (i.Cliente.UserName.Equals(User.Identity.Name)) {
               @: color:'#a463eb',
            }
            allDay: false
               },</text>
                
        }}  
            ],
            eventTimeFormat: { // like '14:30:00'
                hour: '2-digit',
                minute: '2-digit',
               
                meridiem: false,
                hour12: false
            },

        selectAllow: function (info) {
            return (info.start >= new Date());
        },

            select: function (info) {
                @if(User.IsInRole("Admin")){
                     @:console.log(info.startStr);
                     @:console.log(info.endStr);
                     @:console.log(info.view)
                }
                else{
                    <text>
                     $.post('/Home/Reserva', { date: info.startStr }, function (result) {
                    if(result=="ok"){
                    location.reload();
                    }else{
                    location.reload();
                    }
                })
                    </text>
                }
                
                
            },
        });
        calendar.render();
    });

</script>